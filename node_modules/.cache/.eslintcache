[{"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/index.js":"1","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/reportWebVitals.js":"2","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/App.js":"3","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/index.js":"4","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/index.js":"5","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/reducers/index.js":"6","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/StudentContainer.js":"7","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/CampusContainer.js":"8","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/HomePageContainer.js":"9","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/AllCampusesContainer.js":"10","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/AllStudentsContainer.js":"11","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/NewStudentContainer.js":"12","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/reducers/campuses.js":"13","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/reducers/students.js":"14","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/reducers/campus.js":"15","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/reducers/student.js":"16","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/thunks.js":"17","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/HomePageView.js":"18","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/NewStudentView.js":"19","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/AllStudentsView.js":"20","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/index.js":"21","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/actions/actionTypes.js":"22","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/actions/actionCreators.js":"23","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/AllCampusesView.js":"24","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/StudentView.js":"25","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/CampusView.js":"26","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/NewCampusContainer.js":"27","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/NewCampusView.js":"28","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/EditCampusContainer.js":"29","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/EditCampusView.js":"30","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/EditStudentContainer.js":"31","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/EditStudentView.js":"32"},{"size":733,"mtime":1625778360000,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1625778360000,"results":"35","hashOfConfig":"34"},{"size":1288,"mtime":1639253610915,"results":"36","hashOfConfig":"34"},{"size":769,"mtime":1625778360000,"results":"37","hashOfConfig":"34"},{"size":714,"mtime":1639251613650,"results":"38","hashOfConfig":"34"},{"size":449,"mtime":1625778360000,"results":"39","hashOfConfig":"34"},{"size":897,"mtime":1639855120839,"results":"40","hashOfConfig":"34"},{"size":878,"mtime":1638999944243,"results":"41","hashOfConfig":"34"},{"size":159,"mtime":1625778360000,"results":"42","hashOfConfig":"34"},{"size":1135,"mtime":1638910865284,"results":"43","hashOfConfig":"34"},{"size":1187,"mtime":1625778360000,"results":"44","hashOfConfig":"34"},{"size":1768,"mtime":1639252075965,"results":"45","hashOfConfig":"34"},{"size":590,"mtime":1638999338883,"results":"46","hashOfConfig":"34"},{"size":586,"mtime":1625778360000,"results":"47","hashOfConfig":"34"},{"size":290,"mtime":1638910990636,"results":"48","hashOfConfig":"34"},{"size":302,"mtime":1625778360000,"results":"49","hashOfConfig":"34"},{"size":2836,"mtime":1639257512700,"results":"50","hashOfConfig":"34"},{"size":1674,"mtime":1625778360000,"results":"51","hashOfConfig":"34"},{"size":2378,"mtime":1638827914223,"results":"52","hashOfConfig":"34"},{"size":2977,"mtime":1638915846632,"results":"53","hashOfConfig":"34"},{"size":455,"mtime":1625778360000,"results":"54","hashOfConfig":"34"},{"size":549,"mtime":1638994599054,"results":"55","hashOfConfig":"34"},{"size":1365,"mtime":1638994624275,"results":"56","hashOfConfig":"34"},{"size":3113,"mtime":1638915751667,"results":"57","hashOfConfig":"34"},{"size":3337,"mtime":1639596256239,"results":"58","hashOfConfig":"34"},{"size":3458,"mtime":1639257805628,"results":"59","hashOfConfig":"34"},{"size":1691,"mtime":1638828311173,"results":"60","hashOfConfig":"34"},{"size":2004,"mtime":1638828305315,"results":"61","hashOfConfig":"34"},{"size":1819,"mtime":1639257877613,"results":"62","hashOfConfig":"34"},{"size":2105,"mtime":1639257552705,"results":"63","hashOfConfig":"34"},{"size":2126,"mtime":1639854927265,"results":"64","hashOfConfig":"34"},{"size":2541,"mtime":1639257273481,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1jqc0bz",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/index.js",[],["135","136"],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/reportWebVitals.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/App.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/index.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/index.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/reducers/index.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/StudentContainer.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/CampusContainer.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/HomePageContainer.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/AllCampusesContainer.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/AllStudentsContainer.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/NewStudentContainer.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/reducers/campuses.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/reducers/students.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/reducers/campus.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/reducers/student.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/thunks.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/HomePageView.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/NewStudentView.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/AllStudentsView.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/index.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/actions/actionTypes.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/store/actions/actionCreators.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/AllCampusesView.js",["137"],"import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n    fontType: 'bold',\n    fontFamily: 'Courier, sans-serif', \n    fontSize: '35px', \n    color: '#CDDC39'\n  },\n  appBar:{\n    backgroundColor: '#11153e',\n    shadows: ['none'],\n  },\n  greeting:{\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    width: \"50%\",\n    margin: \"auto\",\n  },\n  links:{\n    textDecoration: 'none',\n  }\n\n}));\n\n\nconst AllCampusesView = (props) => {\n  const {deleteCampus} = props;\n\n  const classes = useStyles();\n  if (!props.allCampuses.length) {\n    return (\n    <div className={classes.root}>\n      \n      \n      <AppBar position=\"static\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} color=\"inherit\" >\n            CRUD App\n          </Typography>\n\n          <Link className={classes.links} to={'/campuses'} >\n            <Button variant=\"contained\" color=\"primary\" style={{marginRight: '10px'}}>\n              All Campuses\n            </Button>\n          </Link>\n\n          <Link className={classes.links} to={'/students'} >\n            <Button variant=\"contained\" color=\"primary\">\n              All Students\n            </Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      \n      There are no campuses.\n      <br/>\n      <Link to={`/newcampus`}>\n        <button>Add New Campus</button>\n      </Link>\n\n\n    </div>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} color=\"inherit\" >\n            CRUD App\n          </Typography>\n\n          <Link className={classes.links} to={'/campuses'} >\n            <Button variant=\"contained\" color=\"primary\" style={{marginRight: '10px'}}>\n              All Campuses\n            </Button>\n          </Link>\n\n          <Link className={classes.links} to={'/students'} >\n            <Button variant=\"contained\" color=\"primary\">\n              All Students\n            </Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      {props.allCampuses.map((campus) => (\n        <div key={campus.id}>\n          <h1><Link to={`/campus/${campus.id}`}>\n            {campus.name}\n          </Link> <button onClick={() => deleteCampus(campus.id)}>X</button></h1>\n          <p>{campus.description}</p>\n          <img src={campus.imgUrl} alt=\"campus image\"/>\n\n\n          \n        </div>\n      ))} \n      <Link to={`/newcampus`}>\n        <button>Add New Campus</button>\n      </Link>\n\n    </div>\n    \n  );\n};\n\nAllCampusesView.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n};\n\nexport default AllCampusesView;","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/StudentView.js",["138","139"],"import { Link } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n    fontType: 'bold',\n    fontFamily: 'Courier, sans-serif', \n    fontSize: '35px', \n    color: '#CDDC39'\n  },\n  appBar:{\n    backgroundColor: '#11153e',\n    shadows: ['none'],\n  },\n  greeting:{\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    width: \"50%\",\n    margin: \"auto\",\n  },\n  links:{\n    textDecoration: 'none',\n  }\n\n}));\n\nconst StudentView = (props) => {\n  const { student, deleteStudent } = props;\n  const classes = useStyles();\n\n  if(!student.campus){\n    return(\n      <div className={classes.root}>\n      <AppBar position=\"static\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} color=\"inherit\" >\n            CRUD App\n          </Typography>\n\n          <Link className={classes.links} to={'/campuses'} >\n            <Button variant=\"contained\" color=\"primary\" style={{marginRight: '10px'}}>\n              All Campuses\n            </Button>\n          </Link>\n\n          <Link className={classes.links} to={'/students'} >\n            <Button variant=\"contained\" color=\"primary\">\n              All Students\n            </Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <img src={student.imgUrl} alt=\"student image\"/>\n      <h1>{student.firstname + \" \" + student.lastname}</h1>\n      <h2>Email: {student.email}</h2>\n      <h3>GPA: {student.gpa}</h3>\n      <h3>This student is not enrolled at any campuses.</h3>\n      <Link to={`/students`}>\n        <button onClick={() => deleteStudent(student.id)}>Delete</button>\n        </Link>\n    </div>\n    \n    )\n  }\n  else{\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} color=\"inherit\" >\n            CRUD App\n          </Typography>\n\n          <Link className={classes.links} to={'/campuses'} >\n            <Button variant=\"contained\" color=\"primary\" style={{marginRight: '10px'}}>\n              All Campuses\n            </Button>\n          </Link>\n\n          <Link className={classes.links} to={'/students'} >\n            <Button variant=\"contained\" color=\"primary\">\n              All Students\n            </Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <img src={student.imgUrl} alt=\"student image\"/>\n        <h1>{student.firstname + \" \" + student.lastname}</h1>\n        <h2>Email: {student.email}</h2>\n        <h2>Campus: <Link to={`/campus/${student.campus.id}`}>\n        {student.campus.name}\n        </Link></h2>\n        <h3>GPA: {student.gpa}</h3>\n        <Link to={`/students/editstudent/${student.id}`}>\n           <button>Edit</button>\n            \n        </Link> \n        <Link to={`/students/`}>\n        <button onClick={() => deleteStudent(student.id)}>Delete</button>\n        </Link>\n\n      </div>\n    );\n  \n  }\n\n};\n\nexport default StudentView;","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/CampusView.js",["140"],"import { Link } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n    fontType: 'bold',\n    fontFamily: 'Courier, sans-serif', \n    fontSize: '35px', \n    color: '#CDDC39'\n  },\n  appBar:{\n    backgroundColor: '#11153e',\n    shadows: ['none'],\n  },\n  greeting:{\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    width: \"50%\",\n    margin: \"auto\",\n  },\n  links:{\n    textDecoration: 'none',\n  }\n\n}));\n\n\n\nconst CampusView = (props) => {\n  const {campus, deleteCampus} = props;\n  const classes = useStyles();\n\n  if(campus.students.length>0){\n    return (\n\n      <div className={classes.root}>\n      <AppBar position=\"static\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} color=\"inherit\" >\n            CRUD App\n          </Typography>\n\n          <Link className={classes.links} to={'/campuses'} >\n            <Button variant=\"contained\" color=\"primary\" style={{marginRight: '10px'}}>\n              All Campuses\n            </Button>\n          </Link>\n\n          <Link className={classes.links} to={'/students'} >\n            <Button variant=\"contained\" color=\"primary\">\n              All Students\n            </Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <img src={campus.imgUrl} alt=\"campus image\"/>\n      \n        <h1>{campus.name}</h1>\n        <p>{campus.description}</p>\n        <p>{campus.address}</p>\n        <ul>\n        {campus.students.map( student => {\n          let name = student.firstname + \" \" + student.lastname;\n          return (\n            <li key={student.id}>\n              <Link to={`/student/${student.id}`}>{name}</Link>\n              </li>\n          );\n        })}\n        </ul>\n\n        <Link to={`/campus/editcampus/${campus.id}`}>\n            <button>Edit</button>\n        </Link> \n  \n        <Link to={`/campuses/`}>\n        <button onClick={() => deleteCampus(campus.id)}>Delete</button>\n        </Link>\n      </div>\n    );\n  }\n  else{\n    return (\n\n      <div className={classes.root}>\n        <AppBar position=\"static\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} color=\"inherit\" >\n            CRUD App\n          </Typography>\n\n          <Link className={classes.links} to={'/campuses'} >\n            <Button variant=\"contained\" color=\"primary\" style={{marginRight: '10px'}}>\n              All Campuses\n            </Button>\n          </Link>\n\n          <Link className={classes.links} to={'/students'} >\n            <Button variant=\"contained\" color=\"primary\">\n              All Students\n            </Button>\n          </Link>\n        </Toolbar>\n      </AppBar>      \n        <h1>{campus.name}</h1>\n        <p>{campus.description}</p>\n        <p>{campus.address}</p>\n       <div> There are no students enrolled at this campus.</div>\n       <Link to={`/campus/editcampus/${campus.id}`}>\n            <button>Edit</button>\n        </Link> \n  \n       <button onClick={() => deleteCampus(campus.id)}>Delete</button>\n\n      </div>\n    );\n  }\n\n\n};\n\nexport default CampusView;","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/NewCampusContainer.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/NewCampusView.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/EditCampusContainer.js",["141"],"import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\n\n\nclass EditCampusContainer extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      name: \"\", \n      description: \"\", \n      redirect: false, \n      redirectId: null\n    };\n}\n\n\n    handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        let campus = {\n            name: this.state.name,\n            description: this.state.description,\n            address: this.state.address,\n            id: this.props.match.params.id\n        };\n        \n        let editCampus = await this.props.editCampus(campus);\n\n        this.setState({\n          name: \"\", \n          description: \"\", \n    //      campusId: null, \n          redirect: true, \n          redirectId: campus.id\n        });\n    }\n    \n\n    componentWillUnmount() {\n        this.setState({redirect: false, redirectId: null});\n    }\n    render() {\n      if(this.state.redirect) {\n        return (<Redirect to={`/campus/${this.state.redirectId}`}/>)\n      }\n        return (\n        <EditCampusView \n            campus={this.props.campus}\n            handleChange = {this.handleChange} \n            handleSubmit={this.handleSubmit}      \n          />\n        );\n      }\n    \n}\n\n// map state to props\nconst mapState = (state) => {\n    return {\n      campus: state.campus,\n    };\n  };\n\nconst mapDispatch = (dispatch) => {\n    return({\n        editCampus: (campus) => dispatch(editCampusThunk(campus)),\n\n    })\n}\n\nexport default connect(mapState, mapDispatch)(EditCampusContainer);","/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/EditCampusView.js",[],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/EditStudentContainer.js",["142"],"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/views/EditStudentView.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":106,"column":11,"nodeType":"149","endLine":106,"endColumn":56},{"ruleId":"147","severity":1,"message":"148","line":63,"column":7,"nodeType":"149","endLine":63,"endColumn":54},{"ruleId":"147","severity":1,"message":"148","line":97,"column":7,"nodeType":"149","endLine":97,"endColumn":54},{"ruleId":"147","severity":1,"message":"148","line":66,"column":7,"nodeType":"149","endLine":66,"endColumn":52},{"ruleId":"150","severity":1,"message":"151","line":38,"column":13,"nodeType":"152","messageId":"153","endLine":38,"endColumn":23},{"ruleId":"150","severity":1,"message":"154","line":44,"column":13,"nodeType":"152","messageId":"153","endLine":44,"endColumn":24},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'editCampus' is assigned a value but never used.","Identifier","unusedVar","'editStudent' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]