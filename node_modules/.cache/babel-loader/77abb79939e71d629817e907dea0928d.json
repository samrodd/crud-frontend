{"ast":null,"code":"var _jsxFileName = \"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/AllCampusesContainer.js\";\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCampusesThunk, deleteCampusThunk } from \"../../store/thunks\";\nimport { AllCampusesView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllCampusesContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchAllCampuses();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AllCampusesView, {\n      allCampuses: this.props.allCampuses,\n      deleteCampus: this.props.deleteCampus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Map state to props;\n\n\nconst mapState = state => {\n  return {\n    allCampuses: state.allCampuses\n  };\n}; // Map dispatch to props;\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    deleteCampus: campusId => dispatch(deleteCampusThunk(campusId))\n  };\n}; // Type check props;\n\n\nAllCampusesContainer.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n  fetchAllCampuses: PropTypes.func.isRequired\n}; // Export our store-connected container by default;\n\nexport default connect(mapState, mapDispatch)(AllCampusesContainer);","map":{"version":3,"sources":["/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/AllCampusesContainer.js"],"names":["Component","PropTypes","connect","fetchAllCampusesThunk","deleteCampusThunk","AllCampusesView","AllCampusesContainer","componentDidMount","console","log","props","fetchAllCampuses","render","allCampuses","deleteCampus","mapState","state","mapDispatch","dispatch","campusId","propTypes","array","isRequired","func"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,EAAgCC,iBAAhC,QAAyD,oBAAzD;AACA,SAASC,eAAT,QAAgC,UAAhC;;;AAEA,MAAMC,oBAAN,SAAmCN,SAAnC,CAA6C;AAC3CO,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWC,gBAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,eAAD;AACE,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWG,WAD1B;AAEE,MAAA,YAAY,EAAE,KAAKH,KAAL,CAAWI;AAF3B;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAd0C,C,CAiB7C;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACLH,IAAAA,WAAW,EAAEG,KAAK,CAACH;AADd,GAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMI,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLP,IAAAA,gBAAgB,EAAE,MAAMO,QAAQ,CAACf,qBAAqB,EAAtB,CAD3B;AAELW,IAAAA,YAAY,EAAGK,QAAD,IAAcD,QAAQ,CAACd,iBAAiB,CAACe,QAAD,CAAlB;AAF/B,GAAP;AAKD,CAND,C,CAQA;;;AACAb,oBAAoB,CAACc,SAArB,GAAiC;AAC/BP,EAAAA,WAAW,EAAEZ,SAAS,CAACoB,KAAV,CAAgBC,UADE;AAE/BX,EAAAA,gBAAgB,EAAEV,SAAS,CAACsB,IAAV,CAAeD;AAFF,CAAjC,C,CAKA;;AACA,eAAepB,OAAO,CAACa,QAAD,EAAWE,WAAX,CAAP,CAA+BX,oBAA/B,CAAf","sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCampusesThunk, deleteCampusThunk } from \"../../store/thunks\";\nimport { AllCampusesView } from \"../views\";\n\nclass AllCampusesContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchAllCampuses();\n  }\n\n  render() {\n    return (\n      <AllCampusesView\n        allCampuses={this.props.allCampuses}\n        deleteCampus={this.props.deleteCampus}\n\n      />\n    );\n  }\n}\n\n// Map state to props;\nconst mapState = (state) => {\n  return {\n    allCampuses: state.allCampuses,\n  };\n};\n\n// Map dispatch to props;\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    deleteCampus: (campusId) => dispatch(deleteCampusThunk(campusId)),\n\n  };\n};\n\n// Type check props;\nAllCampusesContainer.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n  fetchAllCampuses: PropTypes.func.isRequired,\n};\n\n// Export our store-connected container by default;\nexport default connect(mapState, mapDispatch)(AllCampusesContainer);"]},"metadata":{},"sourceType":"module"}