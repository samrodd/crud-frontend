{"ast":null,"code":"var _jsxFileName = \"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/EditCampusContainer.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = {\n        name: this.state.name,\n        description: this.state.description,\n        address: this.state.address,\n        campusId: this.props.match.params.id\n      };\n      let editCampus = await this.props.editCampus(campus);\n      this.setState({\n        name: \"\",\n        description: \"\",\n        //      campusId: null, \n        redirect: true,\n        redirectId: campus.id\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(EditCampusView, {\n      campus: this.props.campus,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n\n} // map state to props\n\n\nconst mapState = state => {\n  return {\n    campus: state.campus\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    editCampus: campus => dispatch(editCampusThunk(campus))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditCampusContainer);","map":{"version":3,"sources":["/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/EditCampusContainer.js"],"names":["Component","connect","Redirect","EditCampusView","editCampusThunk","EditCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","campus","state","description","address","campusId","match","params","id","editCampus","redirect","redirectId","componentWillUnmount","render","mapState","mapDispatch","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,eAAT,QAAgC,oBAAhC;;;AAGA,MAAMC,mBAAN,SAAkCL,SAAlC,CAA4C;AAE1CM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAWhBC,YAXgB,GAWDC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd;AAGD,KAfe;;AAAA,SAiBhBC,YAjBgB,GAiBD,MAAML,KAAN,IAAe;AAC1BA,MAAAA,KAAK,CAACM,cAAN;AAEA,UAAIC,MAAM,GAAG;AACTJ,QAAAA,IAAI,EAAE,KAAKK,KAAL,CAAWL,IADR;AAETM,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WAFf;AAGTC,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAHX;AAITC,QAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBC;AAJzB,OAAb;AAOA,UAAIC,UAAU,GAAG,MAAM,KAAKjB,KAAL,CAAWiB,UAAX,CAAsBR,MAAtB,CAAvB;AAEA,WAAKN,QAAL,CAAc;AACZE,QAAAA,IAAI,EAAE,EADM;AAEZM,QAAAA,WAAW,EAAE,EAFD;AAGlB;AACMO,QAAAA,QAAQ,EAAE,IAJE;AAKZC,QAAAA,UAAU,EAAEV,MAAM,CAACO;AALP,OAAd;AAOH,KApCe;;AAEhB,SAAKN,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE,EADK;AAEXM,MAAAA,WAAW,EAAE,EAFF;AAGXO,MAAAA,QAAQ,EAAE,KAHC;AAIXC,MAAAA,UAAU,EAAE;AAJD,KAAb;AAMH;;AA+BGC,EAAAA,oBAAoB,GAAG;AACnB,SAAKjB,QAAL,CAAc;AAACe,MAAAA,QAAQ,EAAE,KAAX;AAAkBC,MAAAA,UAAU,EAAE;AAA9B,KAAd;AACH;;AACDE,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKX,KAAL,CAAWQ,QAAd,EAAwB;AACtB,0BAAQ,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,WAAU,KAAKR,KAAL,CAAWS,UAAW;AAA/C;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;;AACC,wBACA,QAAC,cAAD;AACI,MAAA,MAAM,EAAE,KAAKnB,KAAL,CAAWS,MADvB;AAEI,MAAA,YAAY,EAAI,KAAKR,YAFzB;AAGI,MAAA,YAAY,EAAE,KAAKM;AAHvB;AAAA;AAAA;AAAA;AAAA,YADA;AAOD;;AAvDqC,C,CA2D5C;;;AACA,MAAMe,QAAQ,GAAIZ,KAAD,IAAW;AACxB,SAAO;AACLD,IAAAA,MAAM,EAAEC,KAAK,CAACD;AADT,GAAP;AAGD,CAJH;;AAMA,MAAMc,WAAW,GAAIC,QAAD,IAAc;AAC9B,SAAO;AACHP,IAAAA,UAAU,EAAGR,MAAD,IAAYe,QAAQ,CAAC3B,eAAe,CAACY,MAAD,CAAhB;AAD7B,GAAP;AAIH,CALD;;AAOA,eAAef,OAAO,CAAC4B,QAAD,EAAWC,WAAX,CAAP,CAA+BzB,mBAA/B,CAAf","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\n\n\nclass EditCampusContainer extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      name: \"\", \n      description: \"\", \n      redirect: false, \n      redirectId: null\n    };\n}\n\n\n    handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        let campus = {\n            name: this.state.name,\n            description: this.state.description,\n            address: this.state.address,\n            campusId: this.props.match.params.id\n        };\n        \n        let editCampus = await this.props.editCampus(campus);\n\n        this.setState({\n          name: \"\", \n          description: \"\", \n    //      campusId: null, \n          redirect: true, \n          redirectId: campus.id\n        });\n    }\n    \n\n    componentWillUnmount() {\n        this.setState({redirect: false, redirectId: null});\n    }\n    render() {\n      if(this.state.redirect) {\n        return (<Redirect to={`/campus/${this.state.redirectId}`}/>)\n      }\n        return (\n        <EditCampusView \n            campus={this.props.campus}\n            handleChange = {this.handleChange} \n            handleSubmit={this.handleSubmit}      \n          />\n        );\n      }\n    \n}\n\n// map state to props\nconst mapState = (state) => {\n    return {\n      campus: state.campus,\n    };\n  };\n\nconst mapDispatch = (dispatch) => {\n    return({\n        editCampus: (campus) => dispatch(editCampusThunk(campus)),\n\n    })\n}\n\nexport default connect(mapState, mapDispatch)(EditCampusContainer);"]},"metadata":{},"sourceType":"module"}