{"ast":null,"code":"var _jsxFileName = \"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/AllStudentsContainer.js\";\n// const AllStudentsContainer = () => {\n//   return (\n//     <h1>All Students View</h1>\n//   );\n// };\n// export default AllStudentsContainer;\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\nimport { fetchAllStudentsThunk, deleteStudentThunk } from '../../store/thunks';\nimport AllStudentsView from '../views/AllStudentsView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllStudentsContainer extends Component {\n  componentDidMount() {\n    this.props.fetchAllStudents();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AllStudentsView, {\n        students: this.props.allStudents,\n        deleteStudent: this.props.deleteStudent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Map state to props;\n\n\nconst mapState = state => {\n  return {\n    allStudents: state.allStudents\n  };\n}; // Map dispatch to props;\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\n    deleteStudent: studentId => dispatch(deleteStudentThunk(studentId))\n  };\n};\n\nexport default withRouter(connect(mapState, mapDispatch)(AllStudentsContainer));","map":{"version":3,"sources":["/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/AllStudentsContainer.js"],"names":["Component","connect","withRouter","fetchAllStudentsThunk","deleteStudentThunk","AllStudentsView","AllStudentsContainer","componentDidMount","props","fetchAllStudents","render","allStudents","deleteStudent","mapState","state","mapDispatch","dispatch","studentId"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SACEC,qBADF,EAEEC,kBAFF,QAGO,oBAHP;AAKA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAEA,MAAMC,oBAAN,SAAmCN,SAAnC,CAA6C;AACzCO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,gBAAX;AACD;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI,QAAC,eAAD;AACE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,WADvB;AAEE,QAAA,aAAa,EAAE,KAAKH,KAAL,CAAWI;AAF5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAbwC,C,CAgB7C;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACLH,IAAAA,WAAW,EAAEG,KAAK,CAACH;AADd,GAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMI,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLP,IAAAA,gBAAgB,EAAE,MAAMO,QAAQ,CAACb,qBAAqB,EAAtB,CAD3B;AAELS,IAAAA,aAAa,EAAGK,SAAD,IAAeD,QAAQ,CAACZ,kBAAkB,CAACa,SAAD,CAAnB;AAFjC,GAAP;AAID,CALD;;AAOA,eAAef,UAAU,CAACD,OAAO,CAACY,QAAD,EAAWE,WAAX,CAAP,CAA+BT,oBAA/B,CAAD,CAAzB","sourcesContent":["// const AllStudentsContainer = () => {\n//   return (\n//     <h1>All Students View</h1>\n//   );\n// };\n\n// export default AllStudentsContainer;\n\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n\nimport { \n  fetchAllStudentsThunk,\n  deleteStudentThunk\n} from '../../store/thunks';\n\nimport AllStudentsView from '../views/AllStudentsView';\n\nclass AllStudentsContainer extends Component {\n    componentDidMount() {\n      this.props.fetchAllStudents();\n    }\n    render(){\n        return(\n            <div>\n                <AllStudentsView \n                  students={this.props.allStudents}\n                  deleteStudent={this.props.deleteStudent}   \n                />\n            </div>\n        )\n    }\n}\n\n// Map state to props;\nconst mapState = (state) => {\n  return {\n    allStudents: state.allStudents,\n  };\n};\n\n// Map dispatch to props;\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\n    deleteStudent: (studentId) => dispatch(deleteStudentThunk(studentId)),\n  };\n};\n\nexport default withRouter(connect(mapState, mapDispatch)(AllStudentsContainer));"]},"metadata":{},"sourceType":"module"}