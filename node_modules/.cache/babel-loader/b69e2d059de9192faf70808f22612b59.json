{"ast":null,"code":"var _jsxFileName = \"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/EditCampusContainer.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = {\n        name: this.state.name,\n        description: this.state.description,\n        address: this.state.address //        campusId: this.state.campusId\n\n      };\n      let editCampus = await this.props.editCampus(campus);\n      this.setState({\n        name: \"\",\n        description: \"\",\n        //      campusId: null, \n        redirect: true,\n        redirectId: editCampus.id\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(EditCampusView, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    editCampus: campus => dispatch(editCampusThunk(campus))\n  };\n};\n\nexport default connect(null, mapDispatch)(EditCampusContainer);","map":{"version":3,"sources":["/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/EditCampusContainer.js"],"names":["Component","connect","Redirect","EditCampusView","editCampusThunk","EditCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","campus","state","description","address","editCampus","redirect","redirectId","id","componentWillUnmount","render","mapDispatch","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,eAAT,QAAgC,oBAAhC;;;AAGA,MAAMC,mBAAN,SAAkCL,SAAlC,CAA4C;AACxCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAUlBC,YAVkB,GAUHC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd;AAGD,KAdiB;;AAAA,SAgBlBC,YAhBkB,GAgBH,MAAML,KAAN,IAAe;AAC1BA,MAAAA,KAAK,CAACM,cAAN;AAEA,UAAIC,MAAM,GAAG;AACTJ,QAAAA,IAAI,EAAE,KAAKK,KAAL,CAAWL,IADR;AAETM,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WAFf;AAGTC,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAHX,CAIjB;;AAJiB,OAAb;AAOA,UAAIC,UAAU,GAAG,MAAM,KAAKb,KAAL,CAAWa,UAAX,CAAsBJ,MAAtB,CAAvB;AAEA,WAAKN,QAAL,CAAc;AACZE,QAAAA,IAAI,EAAE,EADM;AAEZM,QAAAA,WAAW,EAAE,EAFD;AAGlB;AACMG,QAAAA,QAAQ,EAAE,IAJE;AAKZC,QAAAA,UAAU,EAAEF,UAAU,CAACG;AALX,OAAd;AAOH,KAnCiB;;AAEd,SAAKN,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE,EADK;AAEXM,MAAAA,WAAW,EAAE,EAFF;AAGXG,MAAAA,QAAQ,EAAE,KAHC;AAIXC,MAAAA,UAAU,EAAE;AAJD,KAAb;AAMH;;AA6BDE,EAAAA,oBAAoB,GAAG;AACnB,SAAKd,QAAL,CAAc;AAACW,MAAAA,QAAQ,EAAE,KAAX;AAAkBC,MAAAA,UAAU,EAAE;AAA9B,KAAd;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKR,KAAL,CAAWI,QAAd,EAAwB;AACtB,0BAAQ,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,WAAU,KAAKJ,KAAL,CAAWK,UAAW;AAA/C;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;;AACD,wBACE,QAAC,cAAD;AACE,MAAA,YAAY,EAAI,KAAKd,YADvB;AAEE,MAAA,YAAY,EAAE,KAAKM;AAFrB;AAAA;AAAA;AAAA;AAAA,YADF;AAMH;;AApDuC;;AAuD5C,MAAMY,WAAW,GAAIC,QAAD,IAAc;AAC9B,SAAO;AACHP,IAAAA,UAAU,EAAGJ,MAAD,IAAYW,QAAQ,CAACvB,eAAe,CAACY,MAAD,CAAhB;AAD7B,GAAP;AAGH,CAJD;;AAMA,eAAef,OAAO,CAAC,IAAD,EAAOyB,WAAP,CAAP,CAA2BrB,mBAA3B,CAAf","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk } from '../../store/thunks';\n\n\nclass EditCampusContainer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          name: \"\", \n          description: \"\", \n          redirect: false, \n          redirectId: null\n        };\n    }\n\n    handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        let campus = {\n            name: this.state.name,\n            description: this.state.description,\n            address: this.state.address\n    //        campusId: this.state.campusId\n        };\n        \n        let editCampus = await this.props.editCampus(campus);\n\n        this.setState({\n          name: \"\", \n          description: \"\", \n    //      campusId: null, \n          redirect: true, \n          redirectId: editCampus.id\n        });\n    }\n\n    componentWillUnmount() {\n        this.setState({redirect: false, redirectId: null});\n    }\n\n    render() {\n        if(this.state.redirect) {\n          return (<Redirect to={`/campus/${this.state.redirectId}`}/>)\n        }\n        return (\n          <EditCampusView \n            handleChange = {this.handleChange} \n            handleSubmit={this.handleSubmit}      \n          />\n        );\n    }\n}\n\nconst mapDispatch = (dispatch) => {\n    return({\n        editCampus: (campus) => dispatch(editCampusThunk(campus)),\n    })\n}\n\nexport default connect(null, mapDispatch)(EditCampusContainer);"]},"metadata":{},"sourceType":"module"}