{"ast":null,"code":"var _jsxFileName = \"/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/EditCampusContainer.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk, fetchCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditCampusContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = {\n        name: this.state.name,\n        description: this.state.description,\n        address: this.state.address //        campusId: this.state.campusId\n\n      };\n      let editCampus = await this.props.editCampus(campus);\n      this.setState({\n        name: \"\",\n        description: \"\",\n        //      campusId: null, \n        redirect: true,\n        redirectId: editCampus.id\n      });\n    };\n  }\n\n  componentDidMount() {\n    //getting campus ID from url\n    this.props.fetchCampus(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(EditCampusView, {\n      campus: this.props.campus,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n\n} // map state to props\n\n\nconst mapState = state => {\n  return {\n    campus: state.campus\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    editCampus: campus => dispatch(editCampusThunk(campus)),\n    fetchCampus: id => dispatch(fetchCampusThunk(id))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditCampusContainer);","map":{"version":3,"sources":["/Users/loughlinrodd/Documents/GitHub/crud-frontend/src/components/containers/EditCampusContainer.js"],"names":["Component","connect","Redirect","EditCampusView","editCampusThunk","fetchCampusThunk","EditCampusContainer","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","campus","state","description","address","editCampus","props","redirect","redirectId","id","componentDidMount","fetchCampus","match","params","componentWillUnmount","render","mapState","mapDispatch","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,oBAAlD;;;AAGA,MAAMC,mBAAN,SAAkCN,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAQxCO,YARwC,GAQzBC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBC;AADT,OAAd;AAGD,KAZuC;;AAAA,SAcxCC,YAdwC,GAczB,MAAML,KAAN,IAAe;AAC1BA,MAAAA,KAAK,CAACM,cAAN;AAEA,UAAIC,MAAM,GAAG;AACTJ,QAAAA,IAAI,EAAE,KAAKK,KAAL,CAAWL,IADR;AAETM,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WAFf;AAGTC,QAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAHX,CAIjB;;AAJiB,OAAb;AAOA,UAAIC,UAAU,GAAG,MAAM,KAAKC,KAAL,CAAWD,UAAX,CAAsBJ,MAAtB,CAAvB;AAEA,WAAKN,QAAL,CAAc;AACZE,QAAAA,IAAI,EAAE,EADM;AAEZM,QAAAA,WAAW,EAAE,EAFD;AAGlB;AACMI,QAAAA,QAAQ,EAAE,IAJE;AAKZC,QAAAA,UAAU,EAAEH,UAAU,CAACI;AALX,OAAd;AAOH,KAjCuC;AAAA;;AACxCC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKJ,KAAL,CAAWK,WAAX,CAAuB,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBJ,EAA/C;AACD;;AAgCHK,EAAAA,oBAAoB,GAAG;AACnB,SAAKnB,QAAL,CAAc;AAACY,MAAAA,QAAQ,EAAE,KAAX;AAAkBC,MAAAA,UAAU,EAAE;AAA9B,KAAd;AACH;;AACDO,EAAAA,MAAM,GAAG;AACL,wBACA,QAAC,cAAD;AACI,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWL,MADvB;AAEI,MAAA,YAAY,EAAI,KAAKR,YAFzB;AAGI,MAAA,YAAY,EAAE,KAAKM;AAHvB;AAAA;AAAA;AAAA;AAAA,YADA;AAOD;;AA/CqC,C,CAmD5C;;;AACA,MAAMiB,QAAQ,GAAId,KAAD,IAAW;AACxB,SAAO;AACLD,IAAAA,MAAM,EAAEC,KAAK,CAACD;AADT,GAAP;AAGD,CAJH;;AAMA,MAAMgB,WAAW,GAAIC,QAAD,IAAc;AAC9B,SAAO;AACHb,IAAAA,UAAU,EAAGJ,MAAD,IAAYiB,QAAQ,CAAC5B,eAAe,CAACW,MAAD,CAAhB,CAD7B;AAEHU,IAAAA,WAAW,EAAGF,EAAD,IAAQS,QAAQ,CAAC3B,gBAAgB,CAACkB,EAAD,CAAjB;AAF1B,GAAP;AAKH,CAND;;AAQA,eAAetB,OAAO,CAAC6B,QAAD,EAAWC,WAAX,CAAP,CAA+BzB,mBAA/B,CAAf","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport EditCampusView from '../views/EditCampusView';\nimport { editCampusThunk, fetchCampusThunk } from '../../store/thunks';\n\n\nclass EditCampusContainer extends Component {\n    componentDidMount() {\n        //getting campus ID from url\n        this.props.fetchCampus(this.props.match.params.id);\n      }\n    \n\n\n    handleChange = event => {\n      this.setState({\n        [event.target.name]: value\n      });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        let campus = {\n            name: this.state.name,\n            description: this.state.description,\n            address: this.state.address\n    //        campusId: this.state.campusId\n        };\n        \n        let editCampus = await this.props.editCampus(campus);\n\n        this.setState({\n          name: \"\", \n          description: \"\", \n    //      campusId: null, \n          redirect: true, \n          redirectId: editCampus.id\n        });\n    }\n    \n\n    componentWillUnmount() {\n        this.setState({redirect: false, redirectId: null});\n    }\n    render() {\n        return (\n        <EditCampusView \n            campus={this.props.campus}\n            handleChange = {this.handleChange} \n            handleSubmit={this.handleSubmit}      \n          />\n        );\n      }\n    \n}\n\n// map state to props\nconst mapState = (state) => {\n    return {\n      campus: state.campus,\n    };\n  };\n\nconst mapDispatch = (dispatch) => {\n    return({\n        editCampus: (campus) => dispatch(editCampusThunk(campus)),\n        fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n\n    })\n}\n\nexport default connect(mapState, mapDispatch)(EditCampusContainer);"]},"metadata":{},"sourceType":"module"}